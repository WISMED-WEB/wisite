host: 127.0.0.1:3323
info:
  contact:
    name: API Support
  description: WISMED Wisite-API Server. Updated@ 2022-09-03T11:33:31+10:00
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: WISMED WISITE API
  version: "1.0"
paths:
  /api/admin/activate:
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: 'true: activate, false: deactivate'
        in: formData
        name: flag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - action successfully
        "400":
          description: Fail - invalid true/false flag
        "401":
          description: Fail - unauthorized error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: activate or deactivate a user
      tags:
      - Admin
  /api/admin/avatar:
    get:
      consumes:
      - application/json
      parameters:
      - description: uname for its avatar
        in: query
        name: uname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get avatar src base64
        "400":
          description: Fail - user does not exist
        "404":
          description: Fail - avatar is empty
      security:
      - ApiKeyAuth: []
      summary: get a user's avatar src as base64
      tags:
      - Admin
  /api/admin/officialize:
    put:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: 'true: officialize, false: un-officialize'
        in: formData
        name: flag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - action successfully
        "400":
          description: Fail - invalid true/false flag
        "401":
          description: Fail - unauthorized error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: officialize or un-officialize a user
      tags:
      - Admin
  /api/admin/onlines:
    get:
      consumes:
      - application/json
      parameters:
      - description: user filter with uname wildcard(*)
        in: query
        name: uname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "401":
          description: Fail - unauthorized error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get all online users
      tags:
      - Admin
  /api/admin/spa/menu:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get menu successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get tailored side menu for different user group
      tags:
      - Admin
  /api/admin/users:
    get:
      consumes:
      - application/json
      parameters:
      - description: user filter with uname wildcard(*)
        in: query
        name: uname
        type: string
      - description: user filter with name wildcard(*)
        in: query
        name: name
        type: string
      - description: user filter with active status
        in: query
        name: active
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - list successfully
        "401":
          description: Fail - unauthorized error
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get all users' info
      tags:
      - Admin
  /api/client/get/size:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get client viewport & other parts' size ok
        "400":
          description: Fail - viewport is not set
      security:
      - ApiKeyAuth: []
      summary: get client viewport, header, menu, content, & post-title size
      tags:
      - Client
  /api/client/set/view:
    put:
      consumes:
      - application/json
      parameters:
      - description: 'width: window.innerWidth & height: window.innerHeight'
        in: body
        name: innerSize
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - set client viewport ok
        "400":
          description: Fail - invalid width or height for setting viewport
      security:
      - ApiKeyAuth: []
      summary: set client browser's viewport ( width, height )
      tags:
      - Client
  /api/debug/erase/all-post:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - delete successfully
        "500":
          description: Fail - internal error
      summary: erase all Post data collected by wisite service (high risk, only for
        debugging)
      tags:
      - Debug
  /api/file/fileitems:
    get:
      consumes:
      - application/json
      parameters:
      - description: file ID (md5)
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get fileitems successfully
        "400":
          description: Fail - incorrect query param id
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get fileitems by given path or id.
      tags:
      - File
  /api/file/pathcontent:
    get:
      consumes:
      - application/json
      parameters:
      - description: year-month, e.g. 2022-05
        in: query
        name: ym
        required: true
        type: string
      - description: group path, e.g. group1/group2/group3
        in: query
        name: gpath
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get content successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get content under specific path.
      tags:
      - File
  /api/file/upload-bodydata:
    post:
      consumes:
      - application/octet-stream
      parameters:
      - description: filename for uploading data from body
        in: query
        name: fname
        required: true
        type: string
      - description: note for uploading file
        in: query
        name: note
        type: string
      - description: 1st category for uploading file
        in: query
        name: group0
        type: string
      - description: 2nd category for uploading file
        in: query
        name: group1
        type: string
      - description: 3rd category for uploading file
        in: query
        name: group2
        type: string
      - description: file data for uploading
        format: binary
        in: body
        name: data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - return storage path
        "400":
          description: Fail - file param is incorrect
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: upload file action via body content.
      tags:
      - File
  /api/file/upload-formfile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: note for uploading file
        in: formData
        name: note
        type: string
      - description: 1st category for uploading file
        in: formData
        name: group0
        type: string
      - description: 2nd category for uploading file
        in: formData
        name: group1
        type: string
      - description: 3rd category for uploading file
        in: formData
        name: group2
        type: string
      - description: file path for uploading
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK - return storage path
        "400":
          description: Fail - file param is incorrect
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: upload file action via form file input.
      tags:
      - File
  /api/post/bookmark/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Post ID (event id) for toggling a bookmark
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - toggled bookmark successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: add or remove a personal bookmark for a post.
      tags:
      - Post
  /api/post/bookmark/bookmarked:
    get:
      consumes:
      - application/json
      parameters:
      - description: order[desc asc] to get Post ids ordered by event time
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get all bookmarked Post ids.
      tags:
      - Post
  /api/post/bookmark/status/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID (event id) for checking bookmark status
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get bookmark status successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get current login user's bookmark status for a post.
      tags:
      - Post
  /api/post/del/one:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID for deleting
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - delete successfully
        "400":
          description: Fail - incorrect query param id
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: delete one Post content.
      tags:
      - Post
  /api/post/erase/one:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID for erasing
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - erase successfully
        "400":
          description: Fail - incorrect query param id
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: erase one Post content permanently.
      tags:
      - Post
  /api/post/follower/ids:
    get:
      consumes:
      - application/json
      parameters:
      - description: followee Post ID
        in: query
        name: followee
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get successfully
        "404":
          description: Fail - empty follower ids
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get a specified Post follower-Post id group.
      tags:
      - Post
  /api/post/ids:
    get:
      consumes:
      - application/json
      parameters:
      - description: time or count
        in: query
        name: fetchby
        required: true
        type: string
      - description: recent [value] minutes for time OR most recent [value] count
        in: query
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get successfully
        "400":
          description: Fail - incorrect query param type
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get a batch of Post id group.
      tags:
      - Post
  /api/post/ids-all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get successfully
        "404":
          description: Fail - empty event ids
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get all Post id group.
      tags:
      - Post
  /api/post/one:
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID for its content
        in: query
        name: id
        required: true
        type: string
      - description: remote ip for media src?
        in: query
        name: remote
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK - get Post event successfully
        "400":
          description: Fail - incorrect query param id
        "404":
          description: Fail - not found
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get one Post content.
      tags:
      - Post
  /api/post/own/ids:
    get:
      consumes:
      - application/json
      parameters:
      - description: time period for query, format is 'yyyymm', e.g. '202206'. if
          missing, current yyyymm applies
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get successfully
        "400":
          description: Fail - incorrect query param type
        "404":
          description: Fail - empty event ids
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get own Post id group in one specific time period.
      tags:
      - Post
  /api/post/template:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - upload successfully
      security:
      - ApiKeyAuth: []
      summary: get Post template for dev reference.
      tags:
      - Post
  /api/post/thumbsup/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Post ID (event id) for adding or removing thumbs-up
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - added or removed thumb successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: add or remove a personal thumbsup for a post.
      tags:
      - Post
  /api/post/thumbsup/status/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID (event id) for checking thumbs-up status
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - get thumbs-up status successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get current login user's thumbsup status for a post.
      tags:
      - Post
  /api/post/upload:
    post:
      consumes:
      - application/json
      parameters:
      - description: filled Post template json file
        in: body
        name: data
        required: true
        schema:
          type: string
      - description: followee Post ID (empty when doing a new post)
        in: query
        name: followee
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - upload successfully
        "400":
          description: Fail - incorrect Post format
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: upload a Post by filling a Post template.
      tags:
      - Post
  /api/rel/action/{whom}:
    put:
      consumes:
      - application/json
      parameters:
      - description: which action to apply, accept [follow, unfollow, block, unblock,
          mute, unmute]
        in: query
        name: action
        required: true
        type: string
      - description: whose uname you want to follow
        in: path
        name: whom
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - following successfully
        "400":
          description: Fail - invalid action type
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: relation actions
      tags:
      - Relation
  /api/rel/content/{type}:
    get:
      consumes:
      - application/json
      parameters:
      - description: relation content type to apply, accept [following, follower,
          blocked, muted]
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - got following successfully
        "400":
          description: Fail - invalid relation content type
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get all relation users for one type
      tags:
      - Relation
  /api/sign-out/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-out successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: sign out action.
      tags:
      - Sign
  /api/sign/in:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: user name or email
        in: formData
        name: uname
        required: true
        type: string
      - description: password
        format: password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-in successfully
        "400":
          description: Fail - incorrect password
        "500":
          description: Fail - internal error
      summary: sign in action. if ok, got token
      tags:
      - Sign
  /api/sign/new:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: user's email
        format: email
        in: formData
        name: email
        required: true
        type: string
      - description: user's real full name
        in: formData
        name: name
        required: true
        type: string
      - description: user's password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - then waiting for verification code
        "400":
          description: Fail - invalid registry fields
        "500":
          description: Fail - internal error
      summary: sign up action, step 1. send user's basic info for registry
      tags:
      - Sign
  /api/sign/reset-pwd:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: user's email
        format: email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - then waiting for verification code
        "400":
          description: Fail - invalid registry fields
        "500":
          description: Fail - internal error
      summary: reset password action, step 1. send verification code to user's email
        for authentication
      tags:
      - Sign
  /api/sign/verify-email:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: verification code (in user's email)
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK - sign-up successfully
        "400":
          description: Fail - incorrect verification code
        "500":
          description: Fail - internal error
      summary: sign up action, step 2. send back email verification code
      tags:
      - Sign
  /api/sign/verify-reset-pwd:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: unique user name
        in: formData
        name: uname
        required: true
        type: string
      - description: verification code (in user's email)
        in: formData
        name: code
        required: true
        type: string
      - description: new password
        in: formData
        name: pwd
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK   - password updated successfully
        "400":
          description: Fail - incorrect verification code
        "500":
          description: Fail - internal error
      summary: reset password action, step 2. send back verification code for updating
        password
      tags:
      - Sign
  /api/system/ver:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get its version
      summary: get this api service version
      tags:
      - System
  /api/system/ver-tag:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get its tag
      summary: get this api service project github version tag
      tags:
      - System
  /api/user/avatar:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - get avatar src base64
        "404":
          description: Fail - avatar is empty
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get self avatar src as base64
      tags:
      - User
  /api/user/heartbeats:
    patch:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - heartbeats successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: frequently call this to indicate that front-end user is active.
      tags:
      - User
  /api/user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK - profile get successfully
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: get user profile
      tags:
      - User
  /api/user/setprofile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: real name
        in: formData
        name: name
        type: string
      - description: phone number
        in: formData
        name: phone
        type: string
      - description: address
        in: formData
        name: addr
        type: string
      - description: city
        in: formData
        name: city
        type: string
      - description: country
        in: formData
        name: country
        type: string
      - description: personal id type
        in: formData
        name: pidtype
        type: string
      - description: personal id
        in: formData
        name: pid
        type: string
      - description: gender M/F
        in: formData
        name: gender
        type: string
      - description: date of birth
        in: formData
        name: dob
        type: string
      - description: job position
        in: formData
        name: position
        type: string
      - description: title
        in: formData
        name: title
        type: string
      - description: employer
        in: formData
        name: employer
        type: string
      - description: biography
        in: formData
        name: bio
        type: string
      - description: avatar
        in: formData
        name: avatar
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK - profile set successfully
        "400":
          description: Fail - invalid set fields
        "500":
          description: Fail - internal error
      security:
      - ApiKeyAuth: []
      summary: set user profile
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
